AWSTemplateFormatVersion: "2010-09-09"

Resources:
  studentViktorVPC: # Created VPC
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      Tags:
        - Key: Name
          Value: studentViktorVPC

  viktorPrivateSubnet: # Created Private Subnet and Referenced to the created VPC
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.1.0/24
      VpcId: !Ref studentViktorVPC
      Tags:
        - Key: Name
          Value: viktorPrivateSubnet

  viktorPublicSubnet: # Created Public Subnet and Referenced to the created VPC
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.2.0/24
      VpcId: !Ref studentViktorVPC
      Tags:
        - Key: Name
          Value: viktorPublicSubnet

  viktorInternetGateWay: # Created Internet Gate Way
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: viktorInternetGateWay

  viktorInternetGateWayAttachment: # Create IGW Attachment Referenced to the created viktorInternetGateWay and add a Reference to the VPC
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref viktorInternetGateWay # After Update from CloudFormation the State of IGW is changed from Detached to Attached
      VpcId: !Ref studentViktorVPC

  viktorPublicRouteTable: # Create Route Table Referenced to the VPC
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref studentViktorVPC
      Tags: # We can create so many props (Tags) with Key and Value
        - Key: Name
          Value: viktorPublicRouteTable
        - Key: Type
          Value: movieTypeRouteTable
        - Key: States
          Value: selectionOfCountries

  viktorRouteTableGateWayRoute: # Create Route Table gate Way Route Routed to IGW and RT, so in destination Routes the prop Target now have unspecified address
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0 # Set unspecified address
      GatewayId: !Ref viktorInternetGateWay
      RouteTableId: !Ref viktorPublicRouteTable

  viktorPublicRouteSubnetAsociation: # Create Public Route Subnet Asociation Referenced to RT and PS
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref viktorPublicRouteTable # Now we have output network in Route Tables / Subnet associations
      SubnetId: !Ref viktorPublicSubnet
